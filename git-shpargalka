git config --global user.name [username]   //sets the username
git config --global user.email [user email]   //sets the user email

git config --global core.pager cat  // show log command output in the terminal

git  user.name  //shows configurated username
git  user.email  //shows configurated user email

git init  //creates git repo in current folder

git add [filename]  //staging file
git add .  //staging all the files

git status // shows info about files
git commit -m "message"  //creates commit with message in between  quotes ""

git checkout [commit code]  //just shows the undone
git revert [commit code or branchname]  //creates new commit with undone things but all the commits are untouched
git reset [commit code or branchname]  // undoing changes but newest version still is in editor
git reset [commit code or branchname] --hard  //permanantly  undoing changes

git branch [branchname]  //creates a new branch
git branch -a  //lists branches
git branch -d [branchname]  //deletes branch if it's merged
git branch -D [branchname]  //deletes branch no matter what
git branch -m [old-name] [new-name]  // renames branch

git checkout [branchname]  //switches branches
git checkout -b [branchname]  //creates and checkouts new branch

git merge [branchname]  //merges written  branch into current branch

git remote add [given name] [url]  //creates short name for url of repo

//setting github data

$ git config --global user.name "your_github_username"
$ git config --global user.email "your_github_email"
$ git config -l

//than enter github login
//enter Personal Access Token
//to create follow these steps

Create Personal Access Token on GitHub

From your GitHub account, go to Settings → Developer Settings → Personal Access Token →
Generate New Token (Give your password) → Fillup the form → click Generate token →
Copy the generated Token, it will be something like
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

Once GIT is configured, we can begin using it to access GitHub. Example:

$ git clone https://github.com/YOUR-USERNAME/YOUR-REPOSITORY
> Cloning into `YOUR-REPOSITORY`...
Username: <type your username>
Password: <type your password or personal access token (GitHub)

//Now cache the given record in your computer to remembers the token:
$ git config --global credential.helper cache

    If needed, anytime you can delete the cache record by:

    $ git config --global --unset credential.helper
    $ git config --system --unset credential.helper

    Now try to pull with -v to verify

    $ git pull -v

    Linux/Debian (Clone as follows):

    git clone https://<tokenhere>@github.com/<user>/<repo>.git







